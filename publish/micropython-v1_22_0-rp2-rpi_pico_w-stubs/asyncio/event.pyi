import io
from . import core as core
from _typeshed import Incomplete
from collections.abc import Generator

class Event:
    state: bool
    waiting: Incomplete
    def __init__(self) -> None: ...
    def is_set(self): ...
    def set(self) -> None: ...
    def clear(self) -> None: ...
    def wait(self) -> Generator[None, None, Incomplete]: ...

class ThreadSafeFlag(io.IOBase):
    state: int
    def __init__(self) -> None: ...
    def ioctl(self, req, flags): ...
    def set(self) -> None: ...
    def clear(self) -> None: ...
    async def wait(self) -> Generator[Incomplete, None, None]: ...
