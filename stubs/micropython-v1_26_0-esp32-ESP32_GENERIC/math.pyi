"""
Module: 'math' on micropython-v1.26.0-esp32-ESP32_GENERIC
"""

# MCU: {'variant': '', 'build': '', 'arch': 'xtensawin', 'port': 'esp32', 'board': 'ESP32_GENERIC', 'board_id': 'ESP32_GENERIC', 'mpy': 'v6.3', 'ver': '1.26.0', 'family': 'micropython', 'cpu': 'ESP32', 'version': '1.26.0'}
# Stubber: v1.26.0
from __future__ import annotations
from _typeshed import Incomplete

inf: float = inf
nan: float = nan
pi: float = 3.1415928
e: float = 2.7182818
tau: float = 6.2831856

def ldexp(*args, **kwargs) -> Incomplete: ...
def lgamma(*args, **kwargs) -> Incomplete: ...
def trunc(*args, **kwargs) -> Incomplete: ...
def isclose(*args, **kwargs) -> Incomplete: ...
def gamma(*args, **kwargs) -> Incomplete: ...
def isnan(*args, **kwargs) -> Incomplete: ...
def isfinite(*args, **kwargs) -> Incomplete: ...
def isinf(*args, **kwargs) -> Incomplete: ...
def sqrt(*args, **kwargs) -> Incomplete: ...
def sinh(*args, **kwargs) -> Incomplete: ...
def log(*args, **kwargs) -> Incomplete: ...
def tan(*args, **kwargs) -> Incomplete: ...
def tanh(*args, **kwargs) -> Incomplete: ...
def log2(*args, **kwargs) -> Incomplete: ...
def log10(*args, **kwargs) -> Incomplete: ...
def sin(*args, **kwargs) -> Incomplete: ...
def modf(*args, **kwargs) -> Incomplete: ...
def radians(*args, **kwargs) -> Incomplete: ...
def atanh(*args, **kwargs) -> Incomplete: ...
def atan2(*args, **kwargs) -> Incomplete: ...
def atan(*args, **kwargs) -> Incomplete: ...
def ceil(*args, **kwargs) -> Incomplete: ...
def copysign(*args, **kwargs) -> Incomplete: ...
def frexp(*args, **kwargs) -> Incomplete: ...
def acos(*args, **kwargs) -> Incomplete: ...
def pow(*args, **kwargs) -> Incomplete: ...
def asinh(*args, **kwargs) -> Incomplete: ...
def acosh(*args, **kwargs) -> Incomplete: ...
def asin(*args, **kwargs) -> Incomplete: ...
def factorial(*args, **kwargs) -> Incomplete: ...
def fabs(*args, **kwargs) -> Incomplete: ...
def expm1(*args, **kwargs) -> Incomplete: ...
def floor(*args, **kwargs) -> Incomplete: ...
def fmod(*args, **kwargs) -> Incomplete: ...
def cos(*args, **kwargs) -> Incomplete: ...
def degrees(*args, **kwargs) -> Incomplete: ...
def cosh(*args, **kwargs) -> Incomplete: ...
def exp(*args, **kwargs) -> Incomplete: ...
def erf(*args, **kwargs) -> Incomplete: ...
def erfc(*args, **kwargs) -> Incomplete: ...
