from typing import Any

class MicroWebSocket:
    _handshakeSign: str
    _opContFrame: int
    _opTextFrame: int
    _opBinFrame: int
    _opCloseFrame: int
    _opPingFrame: int
    _opPongFrame: int
    _msgTypeText: int
    _msgTypeBin: int
    @staticmethod
    def _tryAllocByteArray(size): ...
    @staticmethod
    def _tryStartThread(func, args=..., stackSize: int = ...): ...
    _socket: Any
    _httpCli: Any
    _closed: bool
    RecvTextCallback: Any
    RecvBinaryCallback: Any
    ClosedCallback: Any
    thID: Any
    isThreaded: Any
    _ctrlBuf: Any
    _msgBuf: Any
    _msgType: Any
    _msgLen: int
    def __init__(self, socket, httpClient, httpResponse, maxRecvLen, threaded, acceptCallback, stackSize: int = ...) -> None: ...
    def _handshake(self, httpResponse): ...
    def _wsProcess(self, acceptCallback) -> None: ...
    def _receiveFrame(self): ...
    def _sendFrame(self, opcode, data: Any | None = ..., fin: bool = ...): ...
    def SendText(self, msg): ...
    def SendBinary(self, data): ...
    def IsClosed(self): ...
    def threadID(self): ...
    def Close(self) -> None: ...
