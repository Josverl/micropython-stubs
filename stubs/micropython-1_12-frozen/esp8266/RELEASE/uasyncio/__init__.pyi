from uasyncio.core import *
from typing import Any

DEBUG: int
log: Any

def set_debug(val) -> None: ...

class PollEventLoop(EventLoop):
    poller: Any
    objmap: Any
    def __init__(self, runq_len: int = ..., waitq_len: int = ...) -> None: ...
    def add_reader(self, sock, cb, *args) -> None: ...
    def remove_reader(self, sock) -> None: ...
    def add_writer(self, sock, cb, *args) -> None: ...
    def remove_writer(self, sock) -> None: ...
    def wait(self, delay) -> None: ...

class StreamReader:
    polls: Any
    ios: Any
    def __init__(self, polls, ios: Any | None = ...) -> None: ...
    def read(self, n: int = ...): ...
    def readexactly(self, n): ...
    def readline(self): ...
    def aclose(self) -> None: ...
    def __repr__(self): ...

class StreamWriter:
    s: Any
    extra: Any
    def __init__(self, s, extra) -> None: ...
    def awrite(self, buf, off: int = ..., sz: int = ...) -> None: ...
    def awriteiter(self, iterable) -> None: ...
    def aclose(self) -> None: ...
    def get_extra_info(self, name, default: Any | None = ...): ...
    def __repr__(self): ...

def open_connection(host, port, ssl: bool = ...): ...
def start_server(client_coro, host, port, backlog: int = ...) -> None: ...
