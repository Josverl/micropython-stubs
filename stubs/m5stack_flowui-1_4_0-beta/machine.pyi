from typing import Any

class ADC:
    ATTN_0DB: int
    ATTN_11DB: int
    ATTN_2_5DB: int
    ATTN_6DB: int
    HALL: int
    WIDTH_10BIT: int
    WIDTH_11BIT: int
    WIDTH_12BIT: int
    WIDTH_9BIT: int
    def atten() -> None: ...
    def collect() -> None: ...
    def collected() -> None: ...
    def deinit() -> None: ...
    def progress() -> None: ...
    def read() -> None: ...
    def read_timed() -> None: ...
    def readraw() -> None: ...
    def stopcollect() -> None: ...
    def vref() -> None: ...
    def width() -> None: ...

class DAC:
    CIRCULAR: int
    NOISE: int
    NORMAL: int
    RAMP: int
    SAWTOOTH: int
    SINE: int
    TRIANGLE: int
    def beep() -> None: ...
    def deinit() -> None: ...
    def freq() -> None: ...
    def stopwave() -> None: ...
    def waveform() -> None: ...
    def wavplay() -> None: ...
    def write() -> None: ...
    def write_buffer() -> None: ...
    def write_timed() -> None: ...

DEEPSLEEP: int
DEEPSLEEP_RESET: int
EXT0_WAKE: int
EXT1_WAKE: int
HARD_RESET: int

class I2C:
    CBTYPE_ADDR: int
    CBTYPE_NONE: int
    CBTYPE_RXDATA: int
    CBTYPE_TXDATA: int
    MASTER: int
    READ: int
    SLAVE: int
    WRITE: int
    def address() -> None: ...
    def begin() -> None: ...
    def callback() -> None: ...
    def clock_timing() -> None: ...
    def data_timing() -> None: ...
    def deinit() -> None: ...
    def end() -> None: ...
    def getdata() -> None: ...
    def init() -> None: ...
    def is_ready() -> None: ...
    def read_byte() -> None: ...
    def read_bytes() -> None: ...
    def readfrom() -> None: ...
    def readfrom_into() -> None: ...
    def readfrom_mem() -> None: ...
    def readfrom_mem_into() -> None: ...
    def resetbusy() -> None: ...
    def scan() -> None: ...
    def setdata() -> None: ...
    def start() -> None: ...
    def start_timing() -> None: ...
    def stop() -> None: ...
    def stop_timing() -> None: ...
    def timeout() -> None: ...
    def write_byte() -> None: ...
    def write_bytes() -> None: ...
    def writeto() -> None: ...
    def writeto_mem() -> None: ...

class I2S:
    CHANNEL_ALL_LEFT: int
    CHANNEL_ALL_RIGHT: int
    CHANNEL_ONLY_LEFT: int
    CHANNEL_ONLY_RIGHT: int
    CHANNEL_RIGHT_LEFT: int
    DAC_BOTH_EN: int
    DAC_DISABLE: int
    DAC_LEFT_EN: int
    DAC_RIGHT_EN: int
    FORMAT_I2S: int
    FORMAT_I2S_LSB: int
    FORMAT_I2S_MSB: int
    FORMAT_PCM: int
    FORMAT_PCM_LONG: int
    FORMAT_PCM_SHORT: int
    I2S_NUM_0: int
    I2S_NUM_1: int
    MODE_ADC_BUILT_IN: int
    MODE_DAC_BUILT_IN: int
    MODE_MASTER: int
    MODE_PDM: int
    MODE_RX: int
    MODE_SLAVE: int
    MODE_TX: int
    def adc_enable() -> None: ...
    def bits() -> None: ...
    def deinit() -> None: ...
    def init() -> None: ...
    def nchannels() -> None: ...
    def read() -> None: ...
    def sample_rate() -> None: ...
    def set_adc_pin() -> None: ...
    def set_dac_mode() -> None: ...
    def set_pin() -> None: ...
    def start() -> None: ...
    def stop() -> None: ...
    def volume() -> None: ...
    def write() -> None: ...

class Neopixel:
    BLACK: int
    BLUE: int
    CYAN: int
    GRAY: int
    GREEN: int
    def HSBtoRGB() -> None: ...
    def HSBtoRGBint() -> None: ...
    LIME: int
    MAGENTA: int
    MAROON: int
    NAVY: int
    OLIVE: int
    PURPLE: int
    RED: int
    def RGBtoHSB() -> None: ...
    SILVER: int
    TEAL: int
    TYPE_RGB: int
    TYPE_RGBW: int
    WHITE: int
    YELLOW: int
    def brightness() -> None: ...
    def clear() -> None: ...
    def color_order() -> None: ...
    def deinit() -> None: ...
    def get() -> None: ...
    def info() -> None: ...
    def rainbow() -> None: ...
    def set() -> None: ...
    def setHSB() -> None: ...
    def setHSBint() -> None: ...
    def setWhite() -> None: ...
    def show() -> None: ...
    def timings() -> None: ...

PIN_WAKE: int

class PWM:
    def deinit() -> None: ...
    def duty() -> None: ...
    def freq() -> None: ...
    def init() -> None: ...
    def list() -> None: ...
    def pause() -> None: ...
    def resume() -> None: ...

PWRON_RESET: int

class Pin:
    IN: int
    INOUT: int
    IRQ_FALLING: int
    IRQ_RISING: int
    OPEN_DRAIN: int
    OUT: int
    OUT_OD: int
    PULL_DOWN: int
    PULL_FLOAT: int
    PULL_HOLD: int
    PULL_UP: int
    WAKE_HIGH: int
    WAKE_LOW: int
    def deinit() -> None: ...
    def init() -> None: ...
    def irq() -> None: ...
    def off() -> None: ...
    def on() -> None: ...
    def value() -> None: ...

class RTC:
    def datetime() -> None: ...
    def init() -> None: ...
    def memory() -> None: ...

SLEEP: int
SOFT_RESET: int

class Signal:
    def off() -> None: ...
    def on() -> None: ...
    def value() -> None: ...

TIMER_WAKE: int
TOUCHPAD_WAKE: int

class Timer:
    ONE_SHOT: int
    PERIODIC: int
    def deinit() -> None: ...
    def init() -> None: ...
    def value() -> None: ...

class TouchPad:
    def config() -> None: ...
    def read() -> None: ...

class UART:
    def any() -> None: ...
    def deinit() -> None: ...
    def init() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def sendbreak() -> None: ...
    def write() -> None: ...

ULP_WAKE: int

class WDT:
    def feed() -> None: ...

WDT_RESET: int

def deepsleep() -> None: ...
def disable_irq() -> None: ...
def enable_irq() -> None: ...
def freq() -> None: ...
def heap_info() -> None: ...
def idle() -> None: ...
def lightsleep() -> None: ...

mem16: Any
mem32: Any
mem8: Any

def nvs_erase() -> None: ...
def nvs_erase_all() -> None: ...
def nvs_getint() -> None: ...
def nvs_getstr() -> None: ...
def nvs_setint() -> None: ...
def nvs_setstr() -> None: ...
def random() -> None: ...
def reset() -> None: ...
def reset_cause() -> None: ...
def sleep() -> None: ...
def time_pulse_us() -> None: ...
def unique_id() -> None: ...
def wake_reason() -> None: ...
