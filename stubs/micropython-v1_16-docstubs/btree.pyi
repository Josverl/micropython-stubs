from typing import Any, Dict, Optional

INCL: Any
DESC: Any

class btree:
    def close(self) -> None: ...
    def flush(self) -> Any: ...
    def __getitem__(self, key) -> Any: ...
    def get(self, key, default: Any | None = ...) -> Any: ...
    def __setitem__(self, key, val) -> Any: ...
    def __delitem__(self, key) -> Any: ...
    def __contains__(self, key) -> Any: ...
    def __iter__(self) -> Any: ...
    def keys(self, start_key, end_key, flags: Optional[Any]) -> Any: ...
    def values(self, start_key, end_key, flags: Optional[Any]) -> Any: ...
    def items(self, start_key, end_key, flags: Optional[Any]) -> Any: ...

def open(stream, *, flags: int = ..., pagesize: int = ..., cachesize: int = ..., minkeypage: int = ...) -> Dict: ...
