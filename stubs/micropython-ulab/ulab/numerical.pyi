import ulab
from typing import Optional, Union
from ulab import _ArrayLike as _ArrayLike

def argmax(array: _ArrayLike, *, axis: Optional[int] = ...) -> int: ...
def argmin(array: _ArrayLike, *, axis: Optional[int] = ...) -> int: ...
def argsort(array: ulab.array, *, axis: int = ...) -> ulab.array: ...
def cross(a: ulab.array, b: ulab.array) -> ulab.array: ...
def diff(array: ulab.array, *, n: int = ..., axis: int = ...) -> ulab.array: ...
def flip(array: ulab.array, *, axis: Optional[int] = ...) -> ulab.array: ...
def max(array: _ArrayLike, *, axis: Optional[int] = ...) -> float: ...
def mean(array: _ArrayLike, *, axis: Optional[int] = ...) -> float: ...
def median(array: ulab.array, *, axis: int = ...) -> ulab.array: ...
def min(array: _ArrayLike, *, axis: Optional[int] = ...) -> float: ...
def roll(array: ulab.array, distance: int, *, axis: Optional[int] = ...) -> None: ...
def sort(array: ulab.array, *, axis: int = ...) -> ulab.array: ...
def std(array: _ArrayLike, *, axis: Optional[int] = ..., ddof: int = ...) -> float: ...
def sum(array: _ArrayLike, *, axis: Optional[int] = ...) -> Union[float, int, ulab.array]: ...
