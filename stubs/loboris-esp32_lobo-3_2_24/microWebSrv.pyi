from typing import Any

Node = Any

class MicroWebSocket:
    def Close() -> None: ...
    def IsClosed() -> None: ...
    def SendBinary() -> None: ...
    def SendText() -> None: ...
    def _handshake() -> None: ...
    def _receiveFrame() -> None: ...
    def _sendFrame() -> None: ...
    def _tryAllocByteArray() -> None: ...
    def _tryStartThread() -> None: ...
    def _wsProcess() -> None: ...
    def threadID() -> None: ...

class MicroWebSrv:
    def GetMimeTypeFromFilename() -> None: ...
    def GetRouteHandler() -> None: ...
    def HTMLEscape() -> None: ...
    def IsStarted() -> None: ...
    def SetNotFoundPageUrl() -> None: ...
    def Start() -> None: ...
    def State() -> None: ...
    def Stop() -> None: ...
    def _fileExists() -> None: ...
    def _isPyHTMLFile() -> None: ...
    def _physPathFromURLPath() -> None: ...
    def _serverProcess() -> None: ...
    def _tryAllocByteArray() -> None: ...
    def _tryStartThread() -> None: ...
    def _unquote() -> None: ...
    def _unquote_plus() -> None: ...
    def route() -> None: ...
    def threadID() -> None: ...

class MicroWebSrvRoute: ...

class MicroWebTemplate:
    def Execute() -> None: ...
    def Validate() -> None: ...
    def _parseBloc() -> None: ...
    def _parseCode() -> None: ...
    def _processInstructionELIF() -> None: ...
    def _processInstructionELSE() -> None: ...
    def _processInstructionEND() -> None: ...
    def _processInstructionFOR() -> None: ...
    def _processInstructionIF() -> None: ...
    def _processInstructionINCLUDE() -> None: ...
    def _processInstructionPYTHON() -> None: ...
    def _processToken() -> None: ...

def dumps() -> None: ...
def loads() -> None: ...
def stat() -> None: ...
