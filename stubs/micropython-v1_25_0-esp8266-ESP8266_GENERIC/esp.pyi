"""
Module: 'esp' on micropython-v1.25.0-esp8266-ESP8266_GENERIC-FLASH_2M_ROMFS
"""

# MCU: {'variant': 'FLASH_2M_ROMFS', 'build': '', 'arch': 'xtensa', 'port': 'esp8266', 'board': 'ESP8266_GENERIC', 'board_id': 'ESP8266_GENERIC-FLASH_2M_ROMFS', 'mpy': 'v6.3', 'ver': '1.25.0', 'family': 'micropython', 'cpu': 'ESP8266', 'version': '1.25.0'}
# Stubber: v1.25.0
from __future__ import annotations
from typing import Final
from _typeshed import Incomplete

SLEEP_MODEM: Final[int] = 2
SLEEP_NONE: Final[int] = 0
SLEEP_LIGHT: Final[int] = 1

def flash_user_start(*args, **kwargs) -> Incomplete: ...
def freemem(*args, **kwargs) -> Incomplete: ...
def free(*args, **kwargs) -> Incomplete: ...
def flash_write(*args, **kwargs) -> Incomplete: ...
def malloc(*args, **kwargs) -> Incomplete: ...
def set_native_code_location(*args, **kwargs) -> Incomplete: ...
def osdebug(*args, **kwargs) -> Incomplete: ...
def meminfo(*args, **kwargs) -> Incomplete: ...
def sleep_type(*args, **kwargs) -> Incomplete: ...
def flash_size(*args, **kwargs) -> Incomplete: ...
def deepsleep(*args, **kwargs) -> Incomplete: ...
def check_fw(*args, **kwargs) -> Incomplete: ...
def apa102_write(*args, **kwargs) -> Incomplete: ...
def esf_free_bufs(*args, **kwargs) -> Incomplete: ...
def flash_read(*args, **kwargs) -> Incomplete: ...
def flash_id(*args, **kwargs) -> Incomplete: ...
def flash_erase(*args, **kwargs) -> Incomplete: ...
