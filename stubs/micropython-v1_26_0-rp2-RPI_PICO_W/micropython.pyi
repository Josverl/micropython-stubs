"""
Module: 'micropython' on micropython-v1.26.0-rp2-RPI_PICO_W
"""

# MCU: {'mpy': 'v6.3', 'build': '', 'ver': '1.26.0', 'arch': 'armv6m', 'version': '1.26.0', 'port': 'rp2', 'board': 'RPI_PICO_W', 'family': 'micropython', 'board_id': 'RPI_PICO_W', 'variant': '', 'cpu': 'RP2040'}
# Stubber: v1.25.1
from __future__ import annotations
from _typeshed import Incomplete

def opt_level(*args, **kwargs) -> Incomplete: ...
def mem_info(*args, **kwargs) -> Incomplete: ...
def kbd_intr(*args, **kwargs) -> Incomplete: ...
def qstr_info(*args, **kwargs) -> Incomplete: ...
def schedule(*args, **kwargs) -> Incomplete: ...
def stack_use(*args, **kwargs) -> Incomplete: ...
def heap_unlock(*args, **kwargs) -> Incomplete: ...
def const(*args, **kwargs) -> Incomplete: ...
def heap_lock(*args, **kwargs) -> Incomplete: ...
def alloc_emergency_exception_buf(*args, **kwargs) -> Incomplete: ...

class RingIO:
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def readline(self, *args, **kwargs) -> Incomplete: ...
    def any(self, *args, **kwargs) -> Incomplete: ...
    def read(self, *args, **kwargs) -> Incomplete: ...
    def close(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...
