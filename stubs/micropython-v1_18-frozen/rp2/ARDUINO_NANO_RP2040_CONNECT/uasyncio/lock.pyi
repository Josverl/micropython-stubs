from . import core as core
from collections.abc import Generator
from typing import Any

class Lock:
    state: int
    waiting: Any
    def __init__(self) -> None: ...
    def locked(self): ...
    def release(self) -> None: ...
    async def acquire(self) -> Generator[None, None, Any]: ...
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type, exc, tb): ...
