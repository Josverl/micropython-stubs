
from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
class LS:
    def __repr__(self) -> None: ...
    def __call__(self, path: Any=) -> None: ...
class PWD:
    def __repr__(self) -> Any: ...
        #   0: return os.getcwd()
        # ? 0: return os.getcwd()
    def __call__(self) -> Any: ...
        #   0: return self.__repr__()
        # ? 0: return self.__repr__()
class CLEAR:
    def __repr__(self) -> None: ...
    def __call__(self) -> Any: ...
        #   0: return self.__repr__()
        # ? 0: return self.__repr__()
def head(f: Any, n: int=) -> None: ...
def cat(f: Any) -> None: ...
def newfile(path: Any) -> None: ...
class Man:
    def __repr__(self) -> None: ...
