"""
Module: 'math' on micropython-v1.24.1-esp8266-ESP8266_GENERIC
"""

# MCU: {'variant': '', 'build': '', 'arch': 'xtensa', 'port': 'esp8266', 'board': 'ESP8266_GENERIC', 'board_id': 'ESP8266_GENERIC', 'mpy': 'v6.3', 'ver': '1.24.1', 'family': 'micropython', 'cpu': 'ESP8266', 'version': '1.24.1'}
# Stubber: v1.25.0
from __future__ import annotations
from _typeshed import Incomplete

pi: float = 3.14159
e: float = 2.71828

def isnan(*args, **kwargs) -> Incomplete: ...
def ldexp(*args, **kwargs) -> Incomplete: ...
def frexp(*args, **kwargs) -> Incomplete: ...
def isinf(*args, **kwargs) -> Incomplete: ...
def isfinite(*args, **kwargs) -> Incomplete: ...
def trunc(*args, **kwargs) -> Incomplete: ...
def sqrt(*args, **kwargs) -> Incomplete: ...
def log(*args, **kwargs) -> Incomplete: ...
def tan(*args, **kwargs) -> Incomplete: ...
def modf(*args, **kwargs) -> Incomplete: ...
def sin(*args, **kwargs) -> Incomplete: ...
def radians(*args, **kwargs) -> Incomplete: ...
def atan(*args, **kwargs) -> Incomplete: ...
def ceil(*args, **kwargs) -> Incomplete: ...
def atan2(*args, **kwargs) -> Incomplete: ...
def pow(*args, **kwargs) -> Incomplete: ...
def asin(*args, **kwargs) -> Incomplete: ...
def acos(*args, **kwargs) -> Incomplete: ...
def fmod(*args, **kwargs) -> Incomplete: ...
def fabs(*args, **kwargs) -> Incomplete: ...
def copysign(*args, **kwargs) -> Incomplete: ...
def floor(*args, **kwargs) -> Incomplete: ...
def cos(*args, **kwargs) -> Incomplete: ...
def exp(*args, **kwargs) -> Incomplete: ...
def degrees(*args, **kwargs) -> Incomplete: ...
