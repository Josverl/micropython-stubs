from typing import Any

class BLE:
    def active(self, *args) -> Any: ...
    def config(self, *args) -> Any: ...
    def gap_advertise(self, *args) -> Any: ...
    def gap_connect(self, *args) -> Any: ...
    def gap_disconnect(self, *args) -> Any: ...
    def gap_scan(self, *args) -> Any: ...
    def gattc_discover_characteristics(self, *args) -> Any: ...
    def gattc_discover_descriptors(self, *args) -> Any: ...
    def gattc_discover_services(self, *args) -> Any: ...
    def gattc_exchange_mtu(self, *args) -> Any: ...
    def gattc_read(self, *args) -> Any: ...
    def gattc_write(self, *args) -> Any: ...
    def gatts_indicate(self, *args) -> Any: ...
    def gatts_notify(self, *args) -> Any: ...
    def gatts_read(self, *args) -> Any: ...
    def gatts_register_services(self, *args) -> Any: ...
    def gatts_set_buffer(self, *args) -> Any: ...
    def gatts_write(self, *args) -> Any: ...
    def irq(self, *args) -> Any: ...

FLAG_INDICATE: int
FLAG_NOTIFY: int
FLAG_READ: int
FLAG_WRITE: int
FLAG_WRITE_NO_RESPONSE: int

class UUID: ...
