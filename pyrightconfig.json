// https://github.com/microsoft/pyright/blob/main/docs/configuration.md
{
    "include": [
        "tests",
        "docs"
    ],
    "exclude": [
        // other artefacts
        "**/node_modules",
        "**/__pycache__",
        // no need to check the port diag module : 
        // TODO: pyright: Exclude from stubs
        "**/port_diag.py*",
        "**/lcd160cr_test.py*",
        // examples included in frozen 
        "**/example_*.py*",
        // For now exclude the below list 
        "stubs/micropython-ulab", // Expected class type but received "_DType"
        "stubs/micropython-v1_9_*",
        //"stubs/pycopy-v0_0_0-frozen",
        "stubs/loboris-v3_2_24-frozen",
        "stubs/pico-go"
        //
    ],
    "ignore": [
        // "tests",
        // "docs",
        // see also : https://github.com/Josverl/micropython-stubs/issues/412
        // webrepl
        "**/webrepl.py",
        // uasyncio
        "**/uasyncio/*.py*",
        "**/uasyncio/core.py*",
        "**/uasyncio/funcs.py", // funcs.py:15:22 - error: "await" allowed only within async function
        "**/uasyncio/stream.py*",
        "**/uasyncio/lock.py*",
        "**/uasyncio/event.py*",
        // bluetooth stack has multiple type errors 
        "**/aioble/server.py*",
        "**/aioble/client.py*",
        // RP2
        "**/lsm6dsox.py*", //  TODO: pyright: why does this not see the class variables ?
        // dht : // TODO: pyright: solve esp.dht_readinto and mimxrt.dht_readinto
        "**/dht.py*",
        // pycopy internals
        "**/pycopy_imphook.py*",
        // umqtt
        "**/umqtt/__init__.py*",
        // ignore pip and friends
        "**/upip*.py*",
        // webrepl 
        "**/webrepl*.py*",
        // lobo microwebsrv and pye
        "**/microWebSrv.py*",
        "**/microWebTemplate.py*",
        "**/microWebSocket.py*",
        "**/upysh.py*",
        "**/pye.py*",
        // tests and diagnostic tools 
        "**/port_diag.py*", // esp8266
        "**/lcd160cr_test.py*", // pyboards
        // 1st boot non new firmware
        "**/_boot.py*",
        // drivers with sub-par code for typechecking
        "**/lcd160cr.py*",
        "**/ssd1306.py*",
        "**/dotstar.py*",
        "**/neopixel.py*",
        "**/umqtt/simple.py*",
        "**/atom.py*",
        "**/urequests.py*",
        "**/inisetup.py*",
    ],
    "pythonVersion": "3.8",
    "pythonPlatform": "All",
    "verboseOutput": false,
    //"stubPath": "./typings",
    "typeCheckingMode": "basic",
    // errors
    "reportMissingImports": "error",
    "reportMissingModuleSource": "error",
    // need to fix sometime
    "reportMissingTypeStubs": "none",
    "reportOptionalCall": "information", //  Object of type "None" cannot be called
    "reportGeneralTypeIssues": "warning", // Expected no arguments to "Pin" constructor and a lot of others
    // interesting
    "reportInvalidStringEscapeSequence": "information",
    "reportUndefinedVariable": "warning", // "_WHO_AM_I_REG" is not defined - Not a showstopper
    "reportUnboundVariable": "information",
    "ReportSelfClsParameterName": "information",
    "reportOptionalMemberAccess": "none", // "read" is not a known member of "None" - occurs often in frozen code
    // old firmware stubs
    "reportOptionalSubscript": "information",
    // reduce noise 
    "reportWildcardImportFromLibrary": "none",
    // 
    // "typeshedPath": "stubs/typings/typeshed",
    // "executionEnvironments": [
    //     // CPython core should not have dependencies other that CPython
    //     {
    //         "root": "stubs/cpython_core-micropython",
    //         "extraPaths": []
    //     },
    //     {
    //         "root": "stubs/cpython_core-micropython",
    //         "extraPaths": []
    //     },
    //     {
    //         "root": "stubs/cpython_pyboard",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     // frozen must be able to refer to micropython-lib 
    //     {
    //         "root": "stubs/micropython-v1_10-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_11-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_9_3-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_9_4-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_11-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_12-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_13-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_14-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_15-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_16-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_17-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-latest-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback",
    //             // and perhaps to a newly documented module 
    //             "stubs/micropython-latest-docstubs"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v1_18-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     // future versions
    //     {
    //         "root": "stubs/micropython-v1_19-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     {
    //         "root": "stubs/micropython-v2_0-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     // local pycopy 
    //     {
    //         "root": "stubs/pycopy-v0_0_0-frozen",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     // local pytest 
    //     {
    //         "root": "**/pytest-*",
    //         "extraPaths": [
    //             "stubs/typings/fallback"
    //         ],
    //     },
    //     // ## Lobo frozen #############################################
    //     {
    //         "root": "stubs/loboris-v3_2_24-frozen",
    //         "extraPaths": [
    //             "stubs/loboris-v3_2_24-esp32"
    //         ],
    //     },
    //     // ## Pico-go has its own stubs #############################################
    //     {
    //         "root": "stubs/micropython-pico-go",
    //         "extraPaths": [
    //             "stubs/micropython-pico-go/stubs",
    //             "stubs/micropython-pico-go/stdlib"
    //         ],
    //     },
    // default 
    // {
    //     "root": "stubs",
    //     "extraPaths": [
    //         "stubs/cpython_core-pycopy",
    //         "all-stubs/micropython-latest-docstubs",
    //     ],
    // },
    // ]
}