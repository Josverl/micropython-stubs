name: matrix-test
on: 
    - workflow_dispatch
#    - push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # JOB ######################################################################################################################################

#   list-versions-REAL:
#     # 'Get a list of latest versions of micropython'
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 1
#       - uses: ./.github/actions/get-mpversions
#         id: dynamic

#       - run: echo ${{ steps.dynamic.outputs.json }}

#     outputs:
#       mp_versions: ${{ steps.dynamic.outputs.json }}

  list-versions:
    # 'Get a list of latest versions of micropython'
    runs-on: ubuntu-latest
    steps:
        - run: echo faking it

    outputs:
        # mp_versions: '["preview", "stable", "v1.22.2","v1.21.0"]'
        mp_versions: '["stable","v1.21.0"]'

      

  list-boards:
    # 'Get a list of latest versions of micropython'
    runs-on: ubuntu-latest
    steps:

      - run: echo faking it
    
    outputs:
      boards: '["SEEED_WIO_TERMINAL", "RPI_PICO_W", "ESP32_GENERIC"]'
      include: '[{"board": "SEEED_WIO_TERMINAL", "serialport": "COM10"},{"board": "ESP32_GENERIC", "serialport": "COM3"},{"board": "ESP32_GENERIC", "serialport": "COM3","variant": "THREADS"},{"board": "RPI_PICO_W", "serialport": "/dev/ttyACM0"}]'

  # JOB ######################################################################################################################################
  createstubs_matrix:
    runs-on: ubuntu-latest
    needs:
      - list-versions
      - list-boards
    strategy:
      fail-fast: false
      # max-parallel: 1  # only one version at a time
    
      matrix:
        family: [micropython]
        version: ${{ fromJSON(needs.list-versions.outputs.mp_versions) }}
        board: ${{ fromJSON(needs.list-boards.outputs.boards) }}
        variant: ["-"]
        include: ${{ fromJSON(needs.list-boards.outputs.include) }}



    name: "Run ${{ matrix.version }} | ${{ matrix.serialport }} ${{ matrix.board }} [${{ matrix.variant }}]"
    steps:
      - name: Flash ${{ matrix.board }}
        if : ${{ matrix.serialport }}
        run: |
            echo Flash ${{ matrix.version }}  ${{ matrix.board }} on ${{ matrix.serialport }} [${{ matrix.variant }}]


  # JOB ######################################################################################################################################
#   job10:
#     runs-on: ubuntu-latest
#     outputs:
#       json: ${{ steps.set-matrix.outputs.json }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python (most platforms)
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11"

#       - run: python3 .github/workflows/make_matrix.py
#         id: set-matrix

#   # JOB ######################################################################################################################################

#   job15:
#     runs-on: ubuntu-latest

#     strategy:
#       fail-fast: false
#       max-parallel: 1
#       matrix:
#         platform: [x86, x64]
#         configuration: [Debug, Release]
#         variant: [dev, standard]
#         visualstudio: ["2017", "2019", "2022"]
#         include:
#           - visualstudio: "2017"
#             runner: windows-latest
#             vs_version: "[15, 16]"
#           - visualstudio: "2019"
#             runner: windows-2019
#             vs_version: "[16, 17]"
#           - visualstudio: "2022"
#             runner: windows-2022
#             vs_version: "[17, 18]"
#         # trim down the number of jobs in the matrix
#         exclude:
#           - variant: standard
#             configuration: Debug
#           - visualstudio: "2019"
#             configuration: Debug
#     steps:
#       - name: Run a matrix ${{ matrix.runner}} ${{ matrix.platform}} ${{ matrix.configuration}}
#         run: echo ${{ matrix.runner}} ${{ matrix.platform}} ${{ matrix.configuration}} ${{ matrix.variant}}  ${{ matrix.visualstudio}}  ${{ matrix.vs_version}}




# ########################################################################################################################################
#   list-versions-cs2:
#     # 'Get a matrix for the latest versions of micropython'
#     runs-on: ubuntu-latest
#     steps:
#         - uses: actions/checkout@v4
#           with:
#             fetch-depth: 1
#         - uses: ./.github/actions/get-mpversions
#           id: dynamic
#     outputs:
#         versions: ${{ steps.dynamic.outputs.versions }}
# ########################################################################################################################################
#   job40:
#     needs: list-versions-cs
#     runs-on: self-hosted
#     strategy:
#       matrix: ${{ fromJSON(needs.list-versions-cs.outputs.versions) }}
#       max-parallel: 1
#     #   matrix:
#     #     version: [preview, v1.22.2]
#       steps:
#         - run: |
#           - echo ${{ matrix.version }}
