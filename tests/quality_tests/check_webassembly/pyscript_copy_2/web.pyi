"""
Module: 'pyscript.web' on micropython-v1.24.1-webassembly
"""

# MCU: {'family': 'micropython', 'version': '1.24.1', 'build': '', 'ver': '1.24.1', 'port': 'webassembly', 'board': '', 'cpu': 'Emscripten', 'mpy': 'v6.3', 'arch': ''}
# Stubber: v1.24.0
from __future__ import annotations
from typing import Any, Final, Generator
from _typeshed import Incomplete

ELEMENT_CLASSES: list = []
_B: Final[str] = "on_"

def when(*args, **kwargs) -> Incomplete: ...
def wrap_dom_element(*args, **kwargs) -> Incomplete: ...
def create_proxy(*args, **kwargs) -> Incomplete: ...

class ins:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class label:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class kbd:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class nav:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class input_:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class img:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class meter:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class mark:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class legend:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class menu:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class li:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class map_:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class link:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

page: Incomplete  ## <class 'Page'> = <Page object at ...>

class h1:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class form:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class h2:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class h3:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class figcaption:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class footer:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class figure:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class iframe:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class hgroup:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class header:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class hr:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class h4:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class h5:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class head:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class h6:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class thead:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class th:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class title:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class tbody:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class template:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class tfoot:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class textarea:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class wbr:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class video:
    element_classes_by_tag_name: dict = {}
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def snap(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...

    parent: Incomplete  ## <class 'property'> = <property>
    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Page:
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    title: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class tr:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class track:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class var:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ul:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class object_:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class pre:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class picture:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class progress:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class table:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ol:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class param:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class optgroup:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    options: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class summary:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class strong:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class sup:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class section:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class small:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class span:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class source:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Element:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class div:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ElementCollection:
    def find(self, *args, **kwargs) -> Incomplete: ...

    elements: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_elements(cls, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    classes: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class td:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

document: Incomplete  ## <class 'JsProxy'> = <JsProxy 17>

class html:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

_A: Incomplete  ## <class 'NoneType'> = None

class q:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class embed:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class style:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class script:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class body:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class u:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class i:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Classes:
    def add(self, *args, **kwargs) -> Incomplete: ...
    def contains(self, *args, **kwargs) -> Incomplete: ...
    def toggle(self, *args, **kwargs) -> Incomplete: ...
    def replace(self, *args, **kwargs) -> Incomplete: ...
    def remove(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class sub:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class select:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    options: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class time:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class s:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class main:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class data:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class code:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class output:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class meta:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class p:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Event:
    def add_listener(self, *args, **kwargs) -> Incomplete: ...
    def remove_listener(self, *args, **kwargs) -> Incomplete: ...
    def trigger(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class a:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class dt:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class b:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class fieldset:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class col:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class cite:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class colgroup:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class br:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class button:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class caption:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class canvas:
    element_classes_by_tag_name: dict = {}
    def download(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def draw(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class dl:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class dialog:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class em:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class datalist:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    options: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class dd:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class details:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class del_:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Style:
    def set(self, *args, **kwargs) -> Incomplete: ...
    def remove(self, *args, **kwargs) -> Incomplete: ...

    visible: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class ClassesCollection:
    def contains(self, *args, **kwargs) -> Incomplete: ...
    def _all_class_names(self, *args, **kwargs) -> Incomplete: ...
    def toggle(self, *args, **kwargs) -> Incomplete: ...
    def remove(self, *args, **kwargs) -> Incomplete: ...
    def add(self, *args, **kwargs) -> Incomplete: ...
    def replace(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ContainerElement:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class StyleCollection:
    def remove(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class blockquote:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class HasOptions:
    options: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class option:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Options:
    def remove(self, *args, **kwargs) -> Incomplete: ...
    def add(self, *args, **kwargs) -> Incomplete: ...
    def clear(self, *args, **kwargs) -> Incomplete: ...

    selected: Incomplete  ## <class 'property'> = <property>
    options: Incomplete  ## <class 'property'> = <property>
    def __init__(self, *argv, **kwargs) -> None: ...

class audio:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class aside:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class base:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class abbr:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class address:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class article:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class area:
    element_classes_by_tag_name: dict = {}
    def show_me(self, *args, **kwargs) -> Incomplete: ...
    def get_event(self, *args, **kwargs) -> Incomplete: ...
    def clone(self, *args, **kwargs) -> Incomplete: ...
    def update(self, *args, **kwargs) -> Incomplete: ...
    def find(self, *args, **kwargs) -> Incomplete: ...
    def append(self, *args, **kwargs) -> Incomplete: ...

    style: Incomplete  ## <class 'property'> = <property>
    parent: Incomplete  ## <class 'property'> = <property>
    children: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def get_tag_name(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def wrap_dom_element(cls, *args, **kwargs) -> Incomplete: ...

    classes: Incomplete  ## <class 'property'> = <property>
    @classmethod
    def register_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def unregister_element_classes(cls, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...
