FUNCTIONS AND METHODS WITH *ARGS, **KWARGS
==================================================

MODULE: _espnow (68 functions/methods)
---------------------------
  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: _espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: _espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: _espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: _espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: _espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: _espnow.pyi:0
    Parameters: *args, **kwargs


MODULE: _onewire (72 functions/methods)
----------------------------
  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: crc8(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: readbyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebit(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: writebyte(*args, **kwargs)
    Location: _onewire.pyi:0
    Parameters: *args, **kwargs


MODULE: _thread (81 functions/methods)
---------------------------
  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: allocate_lock(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: exit(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get_ident(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: stack_size(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: start_new_thread(*args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.__init__(self, *argv, **kwargs)
    Location: _thread.pyi:0
    Parameters: **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.acquire(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.locked(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LockType.release(self, *args, **kwargs)
    Location: _thread.pyi:0
    Parameters: *args, **kwargs


MODULE: aioespnow (80 functions/methods)
-----------------------------
  • METHOD: AIOESPNow.__init__(self, *argv, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: **kwargs

  • METHOD: AIOESPNow.__init__(self, *argv, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: **kwargs

  • METHOD: AIOESPNow.__init__(self, *argv, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: **kwargs

  • METHOD: AIOESPNow.__init__(self, *argv, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: **kwargs

  • METHOD: AIOESPNow.active(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.active(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.active(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.active(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.add_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.add_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.add_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.add_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.airecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.airecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.airecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.airecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.any(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.any(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.any(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.any(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.arecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.arecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.arecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.arecv(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.asend(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.asend(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.asend(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.asend(*args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.config(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.config(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.config(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.config(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.del_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.del_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.del_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.del_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peers(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peers(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peers(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.get_peers(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irecv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irecv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irecv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irecv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irq(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irq(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irq(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.irq(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.mod_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.mod_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.mod_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.mod_peer(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.peer_count(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.peer_count(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.peer_count(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.peer_count(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recv(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recvinto(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recvinto(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recvinto(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.recvinto(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.send(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.send(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.send(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.send(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.set_pmk(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.set_pmk(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.set_pmk(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.set_pmk(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.stats(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.stats(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.stats(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AIOESPNow.stats(self, *args, **kwargs)
    Location: aioespnow.pyi:0
    Parameters: *args, **kwargs


MODULE: apa102 (7 functions/methods)
--------------------------
  • FUNCTION: apa102_write(*args, **kwargs)
    Location: apa102.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA102.__init__(self, *argv, **kwargs)
    Location: apa102.pyi:0
    Parameters: **kwargs

  • METHOD: APA102.fill(self, *args, **kwargs)
    Location: apa102.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA102.write(self, *args, **kwargs)
    Location: apa102.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.__init__(self, *argv, **kwargs)
    Location: apa102.pyi:0
    Parameters: **kwargs

  • METHOD: NeoPixel.fill(self, *args, **kwargs)
    Location: apa102.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.write(self, *args, **kwargs)
    Location: apa102.pyi:0
    Parameters: *args, **kwargs


MODULE: apa106 (24 functions/methods)
--------------------------
  • METHOD: APA106.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: APA106.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: APA106.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: APA106.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: APA106.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: APA106.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: NeoPixel.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: NeoPixel.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: NeoPixel.__init__(self, *argv, **kwargs)
    Location: apa106.pyi:0
    Parameters: **kwargs

  • METHOD: NeoPixel.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.fill(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs

  • METHOD: NeoPixel.write(self, *args, **kwargs)
    Location: apa106.pyi:0
    Parameters: *args, **kwargs


MODULE: argparse (11 functions/methods)
----------------------------
  • FUNCTION: _dest_from_optnames(*args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: namedtuple(*args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser.__init__(self, *argv, **kwargs)
    Location: argparse.pyi:0
    Parameters: **kwargs

  • METHOD: ArgumentParser._parse_args(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser._parse_args_impl(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser.add_argument(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser.parse_args(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser.parse_known_args(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ArgumentParser.usage(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs

  • METHOD: _Arg.__init__(self, *argv, **kwargs)
    Location: argparse.pyi:0
    Parameters: **kwargs

  • METHOD: _Arg.parse(self, *args, **kwargs)
    Location: argparse.pyi:0
    Parameters: *args, **kwargs


MODULE: bluetooth (10 functions/methods)
-----------------------------
  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs

  • METHOD: BLE.config(self, *, **kwargs)
    Location: bluetooth.pyi:0
    Parameters: **kwargs


MODULE: deflate (49 functions/methods)
---------------------------
  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.close(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.read(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readinto(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.readline(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DeflateIO.write(self, *args, **kwargs)
    Location: deflate.pyi:0
    Parameters: *args, **kwargs


MODULE: dht (132 functions/methods)
-----------------------
  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT11.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.humidity(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHT22.temperature(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.__init__(self, *argv, **kwargs)
    Location: dht.pyi:0
    Parameters: **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DHTBase.measure(self, *args, **kwargs)
    Location: dht.pyi:0
    Parameters: *args, **kwargs


MODULE: ds18x20 (77 functions/methods)
---------------------------
  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.__init__(self, *argv, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.convert_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.read_temp(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.scan(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DS18X20.write_scratch(self, *args, **kwargs)
    Location: ds18x20.pyi:0
    Parameters: *args, **kwargs


MODULE: esp (15 functions/methods)
-----------------------
  • FUNCTION: apa102_write(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: check_fw(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: esf_free_bufs(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: free(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: freemem(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_in(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_in(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_in(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_in(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_out(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_out(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_out(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gpio_matrix_out(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: malloc(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: meminfo(*args, **kwargs)
    Location: esp.pyi:0
    Parameters: *args, **kwargs


MODULE: esp32 (27 functions/methods)
-------------------------
  • FUNCTION: mcu_temperature(*args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: mcu_temperature(*args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: mcu_temperature(*args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.__init__(self, id, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.__init__(self, id, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.__init__(self, id, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.__init__(self, id, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.init(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.init(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.init(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.init(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.start(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.start(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.start(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.start(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.stop(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.stop(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.stop(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PCNT.stop(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RMT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RMT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RMT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RMT.deinit(self, *args, **kwargs)
    Location: esp32.pyi:0
    Parameters: *args, **kwargs


MODULE: espnow (69 functions/methods)
--------------------------
  • FUNCTION: poll(*args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.__init__(self, *argv, **kwargs)
    Location: espnow.pyi:0
    Parameters: **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.active(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.add_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.any(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.config(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.del_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.get_peers(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.irq(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.mod_peer(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.peer_count(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.recvinto(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.send(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.set_pmk(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ESPNowBase.stats(self, *args, **kwargs)
    Location: espnow.pyi:0
    Parameters: *args, **kwargs


MODULE: flashbdev (40 functions/methods)
-----------------------------
  • METHOD: FlashBdev.__init__(self, *argv, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: **kwargs

  • METHOD: FlashBdev.ioctl(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FlashBdev.readblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FlashBdev.writeblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.__init__(self, *argv, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: **kwargs

  • METHOD: Partition.__init__(self, *argv, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: **kwargs

  • METHOD: Partition.__init__(self, *argv, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: **kwargs

  • METHOD: Partition.__init__(self, *argv, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: **kwargs

  • METHOD: Partition.find(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.find(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.find(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.find(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.get_next_update(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.get_next_update(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.get_next_update(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.get_next_update(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.info(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.info(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.info(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.info(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.ioctl(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.ioctl(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.ioctl(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.ioctl(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.mark_app_valid_cancel_rollback(cls, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.mark_app_valid_cancel_rollback(cls, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.mark_app_valid_cancel_rollback(cls, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.mark_app_valid_cancel_rollback(cls, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.readblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.readblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.readblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.readblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.set_boot(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.set_boot(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.set_boot(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.set_boot(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.writeblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.writeblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.writeblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Partition.writeblocks(self, *args, **kwargs)
    Location: flashbdev.pyi:0
    Parameters: *args, **kwargs


MODULE: framebuf (24 functions/methods)
----------------------------
  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: FrameBuffer1(*args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs

  • METHOD: FrameBuffer.fill_rect(self, *args, **kwargs)
    Location: framebuf.pyi:0
    Parameters: *args, **kwargs


MODULE: gc (12 functions/methods)
----------------------
  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isenabled(*args, **kwargs)
    Location: gc.pyi:0
    Parameters: *args, **kwargs


MODULE: hashlib (52 functions/methods)
---------------------------
  • METHOD: md5.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: hashlib.pyi:0
    Parameters: *args, **kwargs


MODULE: inisetup (16 functions/methods)
----------------------------
  • FUNCTION: check_bootsec(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: check_bootsec(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: check_bootsec(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: check_bootsec(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: check_bootsec(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: fs_corrupted(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: fs_corrupted(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: fs_corrupted(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: fs_corrupted(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: fs_corrupted(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: setup(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: setup(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: setup(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: setup(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: setup(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: wifi(*args, **kwargs)
    Location: inisetup.pyi:0
    Parameters: *args, **kwargs


MODULE: lcd160cr (10 functions/methods)
----------------------------
  • FUNCTION: calcsize(*args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: pack_into(*args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sleep_ms(*args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR._fcmd2(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR._fcmd2b(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR._send(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR._waitfor(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR.iflush(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs

  • METHOD: LCD160CR.oflush(self, *args, **kwargs)
    Location: lcd160cr.pyi:0
    Parameters: *args, **kwargs


MODULE: lwip (69 functions/methods)
------------------------
  • FUNCTION: callback(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: callback(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: callback(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getaddrinfo(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getaddrinfo(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getaddrinfo(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.__init__(self, *argv, **kwargs)
    Location: lwip.pyi:0
    Parameters: **kwargs

  • METHOD: socket.__init__(self, *argv, **kwargs)
    Location: lwip.pyi:0
    Parameters: **kwargs

  • METHOD: socket.__init__(self, *argv, **kwargs)
    Location: lwip.pyi:0
    Parameters: **kwargs

  • METHOD: socket.accept(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.accept(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.accept(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.bind(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.bind(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.bind(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.close(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.close(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.close(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.connect(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.connect(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.connect(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.listen(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.listen(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.listen(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.makefile(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.makefile(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.makefile(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.read(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.read(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.read(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readinto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readinto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readinto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readline(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readline(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.readline(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recv(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recv(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recv(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recvfrom(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recvfrom(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.recvfrom(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.send(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.send(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.send(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendall(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendall(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendall(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.sendto(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setblocking(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setblocking(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setblocking(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setsockopt(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setsockopt(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.setsockopt(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.settimeout(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.settimeout(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.settimeout(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.write(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.write(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.write(self, *args, **kwargs)
    Location: lwip.pyi:0
    Parameters: *args, **kwargs


MODULE: machine (478 functions/methods)
---------------------------
  • FUNCTION: const(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: const(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: dht_readinto(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: info(*args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADC.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADC.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADC.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADC.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADC.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: ADCBlock.connect(self, channel, source, *, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Counter.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.init(self, src, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.init(self, src, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.init(self, src, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter.init(self, src, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Counter._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Counter._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Counter._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Counter._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Counter._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DAC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: DAC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: DAC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: DAC.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DAC.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: DAC.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.__init__(self, id, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._configure(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._overflow(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.init(self, phase_a, phase_b, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.init(self, phase_a, phase_b, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.init(self, phase_a, phase_b, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.init(self, phase_a, phase_b, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.phases(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.phases(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.phases(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder.phases(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Encoder._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Encoder._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Encoder._PCNT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Encoder._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.irq(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Encoder._PCNT.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PWM.duty(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PWM.duty(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PWM.duty(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PWM.duty(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PWM.duty(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.af(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.af_list(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.debug(cls, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.dict(cls, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.disable(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.gpio(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.mapper(cls, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.name(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.names(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.pin(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.port(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: RTC.calibration(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RTC.calibration(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RTC.info(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: RTC.wakeup(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: SDCard.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: SDCard.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: SDCard.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: SDCard.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.info(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.info(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.info(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.info(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.ioctl(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.ioctl(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.ioctl(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.ioctl(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readfrom_mem_into(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.scan(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.start(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.stop(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writeto_mem(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftI2C.writevto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.deinit(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.init(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SoftSPI.write_readinto(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Timer.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Timer.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Timer.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Timer.value(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: TouchPad.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: TouchPad.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: TouchPad.config(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.config(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.config(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: TouchPad.read(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: UART.readchar(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: UART.writechar(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_CDC.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_DEFAULT.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: USBDevice.BUILTIN_NONE.__init__(self, *argv, **kwargs)
    Location: machine.pyi:0
    Parameters: **kwargs

  • METHOD: WDT.timeout_ms(self, *args, **kwargs)
    Location: machine.pyi:0
    Parameters: *args, **kwargs


MODULE: math (22 functions/methods)
------------------------
  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: factorial(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: isclose(*args, **kwargs)
    Location: math.pyi:0
    Parameters: *args, **kwargs


MODULE: neopixel (10 functions/methods)
----------------------------
  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: bitstream(*args, **kwargs)
    Location: neopixel.pyi:0
    Parameters: *args, **kwargs


MODULE: network (64 functions/methods)
---------------------------
  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: ipconfig(param, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: route(*args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: route(*args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: route(*args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: AbstractNIC.connect(*, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: PPP.active(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PPP.active(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PPP.active(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: PPP.active(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WIZNET5K.active(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WIZNET5K.config(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WIZNET5K.ifconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WIZNET5K.isconnected(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WIZNET5K.status(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.config(self, *, **kwargs)
    Location: network.pyi:0
    Parameters: **kwargs

  • METHOD: WLAN.deinit(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.deinit(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ioctl(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ioctl(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.ipconfig(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.send_ethernet(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs

  • METHOD: WLAN.send_ethernet(self, *args, **kwargs)
    Location: network.pyi:0
    Parameters: *args, **kwargs


MODULE: ntptime (21 functions/methods)
---------------------------
  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: gmtime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: settime(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: time(*args, **kwargs)
    Location: ntptime.pyi:0
    Parameters: *args, **kwargs


MODULE: onewire (144 functions/methods)
---------------------------
  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire.__init__(self, *argv, **kwargs)
    Location: onewire.pyi:0
    Parameters: **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire._search_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.crc8(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readbyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.readinto(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.reset(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.scan(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.select_rom(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.write(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebit(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OneWire.writebyte(self, *args, **kwargs)
    Location: onewire.pyi:0
    Parameters: *args, **kwargs


MODULE: pyb (36 functions/methods)
-----------------------
  • FUNCTION: country(*args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: pwm(*args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: repl_info(*args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: servo(*args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCAll.__init__(self, *argv, **kwargs)
    Location: pyb.pyi:0
    Parameters: **kwargs

  • METHOD: ADCAll.read_channel(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCAll.read_core_temp(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCAll.read_core_vbat(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCAll.read_core_vref(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: ADCAll.read_vref(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Accel.read(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Accel.write(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.high(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.irq(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.low(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.off(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.on(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Pin.board.__init__(self, *argv, **kwargs)
    Location: pyb.pyi:0
    Parameters: **kwargs

  • METHOD: Pin.cpu.__init__(self, *argv, **kwargs)
    Location: pyb.pyi:0
    Parameters: **kwargs

  • METHOD: RTC.init(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.__init__(self, *argv, **kwargs)
    Location: pyb.pyi:0
    Parameters: **kwargs

  • METHOD: SDCard.info(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.ioctl(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.power(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.present(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.read(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.readblocks(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.write(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SDCard.writeblocks(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SPI.read(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SPI.readinto(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SPI.write(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SPI.write_readinto(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: UART.flush(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: UART.irq(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs

  • METHOD: UART.txdone(self, *args, **kwargs)
    Location: pyb.pyi:0
    Parameters: *args, **kwargs


MODULE: samd (5 functions/methods)
------------------------
  • FUNCTION: pininfo(*args, **kwargs)
    Location: samd.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Flash.__init__(self, *argv, **kwargs)
    Location: samd.pyi:0
    Parameters: **kwargs

  • METHOD: Flash.ioctl(self, *args, **kwargs)
    Location: samd.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Flash.readblocks(self, *args, **kwargs)
    Location: samd.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Flash.writeblocks(self, *args, **kwargs)
    Location: samd.pyi:0
    Parameters: *args, **kwargs


MODULE: socket (13 functions/methods)
--------------------------
  • FUNCTION: callback(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: callback(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: callback(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: print_pcbs(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: reset(*args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.fileno(self, *args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.fileno(self, *args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.fileno(self, *args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: socket.fileno(self, *args, **kwargs)
    Location: socket.pyi:0
    Parameters: *args, **kwargs


MODULE: ssd1306 (65 functions/methods)
---------------------------
  • FUNCTION: const(*args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.__init__(self, *argv, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: **kwargs

  • METHOD: SSD1306.blit(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.contrast(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.ellipse(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.fill(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.fill_rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.hline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.init_display(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.invert(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.line(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.pixel(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.poly(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.poweroff(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.poweron(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.rotate(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.scroll(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.show(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.text(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306.vline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.__init__(self, *argv, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: **kwargs

  • METHOD: SSD1306_I2C.blit(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.contrast(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.ellipse(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.fill(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.fill_rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.hline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.init_display(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.invert(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.line(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.pixel(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.poly(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.poweroff(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.poweron(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.rotate(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.scroll(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.show(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.text(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.vline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.write_cmd(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_I2C.write_data(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.__init__(self, *argv, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: **kwargs

  • METHOD: SSD1306_SPI.blit(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.contrast(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.ellipse(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.fill(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.fill_rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.hline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.init_display(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.invert(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.line(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.pixel(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.poly(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.poweroff(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.poweron(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.rect(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.rotate(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.scroll(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.show(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.text(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.vline(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.write_cmd(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSD1306_SPI.write_data(self, *args, **kwargs)
    Location: ssd1306.pyi:0
    Parameters: *args, **kwargs


MODULE: tls (39 functions/methods)
-----------------------
  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.__init__(self, *argv, **kwargs)
    Location: tls.pyi:0
    Parameters: **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.get_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_cert_chain(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.load_verify_locations(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.set_ciphers(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs

  • METHOD: SSLContext.wrap_socket(self, *args, **kwargs)
    Location: tls.pyi:0
    Parameters: *args, **kwargs


MODULE: ucollections (144 functions/methods)
--------------------------------
  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.__init__(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.clear(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.copy(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.fromkeys(cls, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.get(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.items(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.keys(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.pop(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.popitem(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.setdefault(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.update(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs

  • METHOD: OrderedDict.values(self, *args, **kwargs)
    Location: ucollections.pyi:0
    Parameters: *args, **kwargs


MODULE: ucryptolib (30 functions/methods)
------------------------------
  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.__init__(self, *argv, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.decrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: aes.encrypt(self, *args, **kwargs)
    Location: ucryptolib.pyi:0
    Parameters: *args, **kwargs


MODULE: uhashlib (78 functions/methods)
----------------------------
  • METHOD: md5.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: md5.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: md5.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: md5.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: md5.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha1.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.__init__(self, *argv, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.digest(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs

  • METHOD: sha256.update(self, *args, **kwargs)
    Location: uhashlib.pyi:0
    Parameters: *args, **kwargs


MODULE: uheapq (36 functions/methods)
--------------------------
  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heapify(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappop(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: heappush(*args, **kwargs)
    Location: uheapq.pyi:0
    Parameters: *args, **kwargs


MODULE: urandom (77 functions/methods)
---------------------------
  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: choice(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: getrandbits(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randint(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: random(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: randrange(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: seed(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: uniform(*args, **kwargs)
    Location: urandom.pyi:0
    Parameters: *args, **kwargs


MODULE: ure (44 functions/methods)
-----------------------
  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: compile(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: match(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: search(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: sub(*args, **kwargs)
    Location: ure.pyi:0
    Parameters: *args, **kwargs


MODULE: urequests (60 functions/methods)
-----------------------------
  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: delete(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: get(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: head(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: patch(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: post(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: put(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • FUNCTION: request(*args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.__init__(self, *argv, **kwargs)
    Location: urequests.pyi:0
    Parameters: **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.close(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs

  • METHOD: Response.json(self, *args, **kwargs)
    Location: urequests.pyi:0
    Parameters: *args, **kwargs


MODULE: uwebsocket (42 functions/methods)
------------------------------
  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: uwebsocket.pyi:0
    Parameters: *args, **kwargs


MODULE: vfs (264 functions/methods)
-----------------------
  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsFat.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.chdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.getcwd(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.ilistdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mkdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.mount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.open(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.remove(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rename(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.rmdir(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.stat(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.statvfs(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs

  • METHOD: VfsLfs2.umount(self, *args, **kwargs)
    Location: vfs.pyi:0
    Parameters: *args, **kwargs


MODULE: websocket (42 functions/methods)
-----------------------------
  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.__init__(self, *argv, **kwargs)
    Location: websocket.pyi:0
    Parameters: **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.close(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.ioctl(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.read(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readinto(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.readline(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs

  • METHOD: websocket.write(self, *args, **kwargs)
    Location: websocket.pyi:0
    Parameters: *args, **kwargs


