[project]
name = "micropython-stubs"
authors = [{ name = "Jos Verlinde", email = "jos_verlinde@hotmail.com"}]

description = "The MicroPython stubs project"
version = "0.1.0"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: MicroPython",
  "License :: OSI Approved :: MIT License"
]
readme = "readme.md"
license = "MIT"


[project.optional-dependencies]
# uv pip install -r pyproject.toml --extra stubber --prerelease=allow
stubber = [
  "micropython-stubber>=v1.26.0",
  "mpflash>=1.26.0"
]

test = [
"micropython-stubber",
"rich-click",
# for quality reporting
"pytest",
"pyright>=1.1.341",
"mypy",
"fasteners",
"python-dotenv",
"pydocstyle",
"loguru",
"mypy_gitlab_code_quality",
]

stats = [
"ipykernel",
"google-cloud-bigquery>=3.12.0",
"pandas",
"matplotlib",
# interactive matplotlib figures in jupyter
"ipywidgets ",
"ipympl",
]

docs =[
"Sphinx>= 4",
"myst-parser >= 0.15",
"sphinxcontrib-mermaid",
"sphinx_rtd_theme",
"sphinx-autoapi>= 1.8",
"Jinja2>= 3.0",
"pandas>= 2.2.2",

]

[tool.micropython-stubber]
# New config
"mpy-stubs-path" = "."

#-----------------
# < v1.18 config
stub-path = "./stubs"
publish-path = "./publish"
template-path = "./publish/template"
#-----------------





#-----------------
[tool.black]
# use same config as -stubber
line-length = 140
target_version = ['py38']
include = '\.pyi?$'
exclude = '''
(
    /(
        | tests
    )/
)
'''

[tool.pytest.ini_options]
minversion = "7.0"
python_functions = ["test_", "*_test"]
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests/quality_tests"]
norecursedirs = [
    "publish",
    "stubs",
    "repos",
    "typings*",
    ".svn",
    "_build",
    "tmp*",
    ".*",
    "build",
    "dist",
    "{arch}",
    "*.egg",
]
junit_family = "xunit1"

addopts = "--verbose --capture=no"
#  -m 'not snippets'
# --numprocesses=auto 
# -m MARKEXPR           Only run tests matching given mark expression. For example: -m 'mark1 and not mark2'.
# -n --numprocesses=numprocesses - 

markers = ["snippets: test snippets to check the stub quality"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.

# Same as Black.
line-length = 140
indent-width = 4

#Stubs should be usable Python 3.9
target-version = "py39"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
exclude = [".*", "__*", "dist", "repos"]

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
exclude = [".*", "__*", "dist", "repos"]

extend-select = [
    # "E501", # line too long
    # "UP", # pyupgrade
]
ignore = [
    "F401", # unused import
    "F403", # import *
    "F821",
    "UP035", # pyupgrade `typing.Dict` is deprecated, use `dict` instead
]
